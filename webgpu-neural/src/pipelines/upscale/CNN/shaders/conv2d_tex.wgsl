
// Layer: conv2d_0 - Conv2D with multiple inputs
@group(0) @binding(0) var MAIN_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tex: texture_storage_2d<rgba16float, write>;

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return textureLoad(MAIN_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0);
}
@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  let dim_out: vec2u = textureDimensions(conv2d_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  var result: vec4f = vec4f(0.0);

  // Output channels 0 to 3

  result += mat4x4<f32>(
    -0.33839983, 0.11255829, 0.14489543, -0.20145003,
    0.15915576, -0.05689080, -0.36354986, 0.01912130,
    0.09102504, -0.05468298, 0.07697760, 0.03729702,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, -1, -1);

  result += mat4x4<f32>(
    -0.44634283, 0.44323426, 0.36854771, -0.16103844,
    -0.50334090, 0.78872037, 0.62940735, -0.41734323,
    -0.05924738, 0.14181377, 0.18183741, -0.20667881,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, -1, 0);

  result += mat4x4<f32>(
    0.22963278, -0.18215995, -0.36440125, 0.30521598,
    0.05605837, -0.01775728, -0.04331655, -0.01212677,
    -0.04086053, -0.16451392, 0.05165749, -0.03306634,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, -1, 1);

  result += mat4x4<f32>(
    -0.02292616, -0.36227915, 0.09639844, -0.26790929,
    -0.43766415, 0.28464669, -0.75270313, -0.22038245,
    0.08670436, 0.08340992, -0.13188294, -0.09221081,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, 0, -1);

  result += mat4x4<f32>(
    -0.29148653, -0.48788279, -0.10374999, 0.28607038,
    0.78417230, 0.35425276, -0.03019486, 0.36460230,
    0.13974079, 0.37290254, -0.69178176, -0.29730651,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.36320630, 0.38364089, -0.18572263, 0.38310340,
    0.12599762, 0.09904310, -0.06490600, 0.16862799,
    -0.15734689, -0.40582019, -0.05020079, -0.00245398,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, 0, 1);

  result += mat4x4<f32>(
    0.13046679, -0.00359275, 0.04154500, -0.50523716,
    -0.15275608, -0.06322913, 0.00406309, 0.15906975,
    0.01547458, 0.02322314, 0.06074178, 0.16340524,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, 1, -1);

  result += mat4x4<f32>(
    0.41429821, 0.25589651, -0.06990062, 0.01980993,
    -0.05163250, -0.11551605, 0.25329891, -0.51426458,
    -0.07864278, -0.05505919, 0.18518376, 0.16895415,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, 1, 0);

  result += mat4x4<f32>(
    -0.03839451, -0.04962738, 0.03544120, -0.00656352,
    -0.09405593, -0.14878973, 0.12931082, -0.31522629,
    -0.01621068, 0.11235334, 0.06875792, 0.17334752,
    0.00000000, 0.00000000, 0.00000000, 0.00000000
  ) * go_0(pixel.xy, 1, 1);

  result += vec4f(-0.03094991, -0.19077531, 0.06101533, 0.14740263);
  textureStore(conv2d_tex, pixel.xy, result);
}
