
// Layer: conv2d_3_0 - Conv2D with multiple inputs
@group(0) @binding(0) var conv2d_2_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_3_tex: texture_storage_2d<rgba16float, write>;

fn max4(v: vec4f, val: f32) -> vec4f {
  return max(v, vec4f(val));
}

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_2_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_1(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_2_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  let dim_out: vec2u = textureDimensions(conv2d_3_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  var result: vec4f = vec4f(0.0);

  // Output channels 0 to 3

  result += mat4x4<f32>(
    -0.04210192, 0.07068566, -0.08222141, 0.04923365,
    0.42564312, -0.09434915, 0.02424646, 0.38146758,
    0.11116620, -0.02337557, 0.01563791, 0.10305303,
    -0.10871606, 0.14222291, -0.17820616, -0.08004958
  ) * go_0(pixel.xy, -1, -1);

  result += mat4x4<f32>(
    -0.03592707, 0.08350141, 0.06084422, -0.18524462,
    -0.27736369, -0.09753567, 0.15852097, -0.08729459,
    -0.04008514, 0.38048708, 0.11373588, -0.03132998,
    0.05314300, -0.20387952, 0.13946317, -0.20919529
  ) * go_0(pixel.xy, -1, 0);

  result += mat4x4<f32>(
    -0.13244267, 0.24057566, -0.02223672, -0.14529948,
    -0.03270603, -0.25053260, 0.11040232, 0.00289883,
    -0.01587471, 0.14842948, 0.08106752, 0.08465406,
    0.12186267, -0.01290802, 0.05815994, 0.03240402
  ) * go_0(pixel.xy, -1, 1);

  result += mat4x4<f32>(
    0.17172115, -0.02838612, -0.13919169, -0.12297443,
    0.05947318, 0.08673723, -0.28977618, 0.06038329,
    0.18221000, 0.02905639, -0.11080315, 0.08793747,
    -0.11817448, 0.03195549, 0.18144548, 0.03117866
  ) * go_0(pixel.xy, 0, -1);

  result += mat4x4<f32>(
    -0.12877254, -0.56193274, 0.33968139, -0.33384490,
    0.03570922, 0.24679652, -0.12744589, 0.83915359,
    0.29661775, 0.02581292, -0.10102054, 0.31751916,
    0.06849457, 0.18499261, -0.11228869, -0.42634386
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.23750131, -0.07056163, -0.01842001, 0.01335566,
    0.01062135, 0.12427387, -0.18715174, -0.17651230,
    0.28305480, 0.04881652, 0.08332471, -0.04529040,
    0.26813895, 0.21380447, -0.06322316, 0.04383686
  ) * go_0(pixel.xy, 0, 1);

  result += mat4x4<f32>(
    0.16572754, 0.01095141, -0.12886046, -0.04426089,
    -0.20779756, 0.01160532, -0.35249159, 0.11695667,
    -0.10618373, -0.03111254, 0.01163155, -0.03293396,
    0.12694579, 0.12901258, 0.04502863, -0.03436454
  ) * go_0(pixel.xy, 1, -1);

  result += mat4x4<f32>(
    0.38023400, 0.12241504, -0.08342505, 0.10718086,
    0.08063187, -0.10298694, -0.25348660, -0.15785159,
    0.18286289, 0.11453244, 0.05217715, 0.03601917,
    -0.19781290, 0.02965462, 0.00233609, -0.11515669
  ) * go_0(pixel.xy, 1, 0);

  result += mat4x4<f32>(
    0.22702017, -0.04900808, 0.05469196, 0.08823485,
    0.17930780, 0.14729786, 0.27423969, 0.04104350,
    -0.06915548, 0.01135197, 0.10245088, 0.02402552,
    -0.14867319, 0.01286156, 0.00596043, -0.04107304
  ) * go_0(pixel.xy, 1, 1);

  result += mat4x4<f32>(
    0.07561693, -0.16392931, 0.27311233, -0.02858263,
    -0.20006453, 0.22909342, 0.07677409, -0.20705946,
    0.02614977, -0.02976631, 0.15501837, -0.10533641,
    0.07265438, -0.02066029, 0.22347480, 0.07843960
  ) * go_0(pixel.xy, -1, -1);

  result += mat4x4<f32>(
    0.14881404, -0.15912673, -0.18077371, 0.19634615,
    -0.05836572, 0.08370332, -0.08501892, 0.17595537,
    0.13723360, -0.24131231, -0.02286345, 0.24900140,
    -0.23189835, 0.06697863, -0.02401657, 0.13019180
  ) * go_0(pixel.xy, -1, 0);

  result += mat4x4<f32>(
    0.05850567, -0.22735965, -0.04041987, 0.11787747,
    -0.02612679, 0.14615807, -0.07646374, 0.17243959,
    0.04176982, -0.12650736, -0.03144630, -0.05564084,
    0.01406451, -0.04298418, -0.09385337, -0.01746753
  ) * go_0(pixel.xy, -1, 1);

  result += mat4x4<f32>(
    -0.34452751, -0.15046610, -0.02558231, 0.02611697,
    0.03234171, -0.13652477, -0.06932133, -0.25163183,
    -0.19559872, 0.06813031, 0.22402239, 0.06396779,
    0.15309854, 0.08618806, -0.68965185, 0.24934220
  ) * go_0(pixel.xy, 0, -1);

  result += mat4x4<f32>(
    0.24601972, 0.43704033, -0.25248274, -0.13549496,
    -0.03674171, -0.04519664, 0.12045316, -0.29655153,
    -0.02474265, 0.26573589, 0.15970238, -0.16292477,
    -0.60542071, -0.31042591, 0.16719835, -0.24327968
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05809546, 0.03526637, -0.21754961, 0.20644298,
    -0.06324447, -0.04819587, 0.02782740, 0.06318739,
    -0.13287640, 0.08752092, 0.05230057, 0.04903703,
    -0.31309861, -0.05632656, -0.09642392, -0.10163328
  ) * go_0(pixel.xy, 0, 1);

  result += mat4x4<f32>(
    -0.07161161, -0.05410852, 0.20692311, -0.02342567,
    0.24904726, -0.20546375, 0.01693084, -0.06909382,
    0.07694084, 0.15012044, 0.19588953, 0.18551376,
    -0.35911030, -0.08790004, -0.29727605, 0.01697281
  ) * go_0(pixel.xy, 1, -1);

  result += mat4x4<f32>(
    -0.24680635, -0.13495395, -0.04380997, -0.13518594,
    -0.05168291, 0.13667443, 0.13021693, 0.37377089,
    -0.28919750, -0.11310625, 0.02111294, -0.00171364,
    -0.09391738, -0.00824848, 0.11782011, 0.12923798
  ) * go_0(pixel.xy, 1, 0);

  result += mat4x4<f32>(
    -0.10656604, 0.06381913, -0.12672445, -0.14367542,
    -0.12963475, -0.05873281, -0.12699595, 0.01714041,
    0.14872585, 0.03857055, 0.02102877, -0.02722592,
    0.07143639, 0.00430703, -0.10162979, 0.02178072
  ) * go_0(pixel.xy, 1, 1);

  result += mat4x4<f32>(
    -0.04210192, 0.07068566, -0.08222141, 0.04923365,
    0.42564312, -0.09434915, 0.02424646, 0.38146758,
    0.11116620, -0.02337557, 0.01563791, 0.10305303,
    -0.10871606, 0.14222291, -0.17820616, -0.08004958
  ) * go_1(pixel.xy, -1, -1);

  result += mat4x4<f32>(
    -0.03592707, 0.08350141, 0.06084422, -0.18524462,
    -0.27736369, -0.09753567, 0.15852097, -0.08729459,
    -0.04008514, 0.38048708, 0.11373588, -0.03132998,
    0.05314300, -0.20387952, 0.13946317, -0.20919529
  ) * go_1(pixel.xy, -1, 0);

  result += mat4x4<f32>(
    -0.13244267, 0.24057566, -0.02223672, -0.14529948,
    -0.03270603, -0.25053260, 0.11040232, 0.00289883,
    -0.01587471, 0.14842948, 0.08106752, 0.08465406,
    0.12186267, -0.01290802, 0.05815994, 0.03240402
  ) * go_1(pixel.xy, -1, 1);

  result += mat4x4<f32>(
    0.17172115, -0.02838612, -0.13919169, -0.12297443,
    0.05947318, 0.08673723, -0.28977618, 0.06038329,
    0.18221000, 0.02905639, -0.11080315, 0.08793747,
    -0.11817448, 0.03195549, 0.18144548, 0.03117866
  ) * go_1(pixel.xy, 0, -1);

  result += mat4x4<f32>(
    -0.12877254, -0.56193274, 0.33968139, -0.33384490,
    0.03570922, 0.24679652, -0.12744589, 0.83915359,
    0.29661775, 0.02581292, -0.10102054, 0.31751916,
    0.06849457, 0.18499261, -0.11228869, -0.42634386
  ) * go_1(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.23750131, -0.07056163, -0.01842001, 0.01335566,
    0.01062135, 0.12427387, -0.18715174, -0.17651230,
    0.28305480, 0.04881652, 0.08332471, -0.04529040,
    0.26813895, 0.21380447, -0.06322316, 0.04383686
  ) * go_1(pixel.xy, 0, 1);

  result += mat4x4<f32>(
    0.16572754, 0.01095141, -0.12886046, -0.04426089,
    -0.20779756, 0.01160532, -0.35249159, 0.11695667,
    -0.10618373, -0.03111254, 0.01163155, -0.03293396,
    0.12694579, 0.12901258, 0.04502863, -0.03436454
  ) * go_1(pixel.xy, 1, -1);

  result += mat4x4<f32>(
    0.38023400, 0.12241504, -0.08342505, 0.10718086,
    0.08063187, -0.10298694, -0.25348660, -0.15785159,
    0.18286289, 0.11453244, 0.05217715, 0.03601917,
    -0.19781290, 0.02965462, 0.00233609, -0.11515669
  ) * go_1(pixel.xy, 1, 0);

  result += mat4x4<f32>(
    0.22702017, -0.04900808, 0.05469196, 0.08823485,
    0.17930780, 0.14729786, 0.27423969, 0.04104350,
    -0.06915548, 0.01135197, 0.10245088, 0.02402552,
    -0.14867319, 0.01286156, 0.00596043, -0.04107304
  ) * go_1(pixel.xy, 1, 1);

  result += mat4x4<f32>(
    0.07561693, -0.16392931, 0.27311233, -0.02858263,
    -0.20006453, 0.22909342, 0.07677409, -0.20705946,
    0.02614977, -0.02976631, 0.15501837, -0.10533641,
    0.07265438, -0.02066029, 0.22347480, 0.07843960
  ) * go_1(pixel.xy, -1, -1);

  result += mat4x4<f32>(
    0.14881404, -0.15912673, -0.18077371, 0.19634615,
    -0.05836572, 0.08370332, -0.08501892, 0.17595537,
    0.13723360, -0.24131231, -0.02286345, 0.24900140,
    -0.23189835, 0.06697863, -0.02401657, 0.13019180
  ) * go_1(pixel.xy, -1, 0);

  result += mat4x4<f32>(
    0.05850567, -0.22735965, -0.04041987, 0.11787747,
    -0.02612679, 0.14615807, -0.07646374, 0.17243959,
    0.04176982, -0.12650736, -0.03144630, -0.05564084,
    0.01406451, -0.04298418, -0.09385337, -0.01746753
  ) * go_1(pixel.xy, -1, 1);

  result += mat4x4<f32>(
    -0.34452751, -0.15046610, -0.02558231, 0.02611697,
    0.03234171, -0.13652477, -0.06932133, -0.25163183,
    -0.19559872, 0.06813031, 0.22402239, 0.06396779,
    0.15309854, 0.08618806, -0.68965185, 0.24934220
  ) * go_1(pixel.xy, 0, -1);

  result += mat4x4<f32>(
    0.24601972, 0.43704033, -0.25248274, -0.13549496,
    -0.03674171, -0.04519664, 0.12045316, -0.29655153,
    -0.02474265, 0.26573589, 0.15970238, -0.16292477,
    -0.60542071, -0.31042591, 0.16719835, -0.24327968
  ) * go_1(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05809546, 0.03526637, -0.21754961, 0.20644298,
    -0.06324447, -0.04819587, 0.02782740, 0.06318739,
    -0.13287640, 0.08752092, 0.05230057, 0.04903703,
    -0.31309861, -0.05632656, -0.09642392, -0.10163328
  ) * go_1(pixel.xy, 0, 1);

  result += mat4x4<f32>(
    -0.07161161, -0.05410852, 0.20692311, -0.02342567,
    0.24904726, -0.20546375, 0.01693084, -0.06909382,
    0.07694084, 0.15012044, 0.19588953, 0.18551376,
    -0.35911030, -0.08790004, -0.29727605, 0.01697281
  ) * go_1(pixel.xy, 1, -1);

  result += mat4x4<f32>(
    -0.24680635, -0.13495395, -0.04380997, -0.13518594,
    -0.05168291, 0.13667443, 0.13021693, 0.37377089,
    -0.28919750, -0.11310625, 0.02111294, -0.00171364,
    -0.09391738, -0.00824848, 0.11782011, 0.12923798
  ) * go_1(pixel.xy, 1, 0);

  result += mat4x4<f32>(
    -0.10656604, 0.06381913, -0.12672445, -0.14367542,
    -0.12963475, -0.05873281, -0.12699595, 0.01714041,
    0.14872585, 0.03857055, 0.02102877, -0.02722592,
    0.07143639, 0.00430703, -0.10162979, 0.02178072
  ) * go_1(pixel.xy, 1, 1);

  result += vec4f(0.02777516, 0.05858824, -0.06054217, 0.22130920);
  textureStore(conv2d_3_tex, pixel.xy, result);
}
