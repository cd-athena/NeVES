
// Layer: conv2d_7_2 - Conv2D with multiple inputs
@group(0) @binding(0) var conv2d_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_6_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_7_2_tex: texture_storage_2d<rgba16float, write>;

fn max4(v: vec4f, val: f32) -> vec4f {
  return max(v, vec4f(val));
}

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_1(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_1_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_2(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_2_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_3(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_3_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_4(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_4_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_5(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_5_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_6(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_6_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_7(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_8(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_1_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_9(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_2_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_10(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_3_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_11(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_4_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_12(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_5_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_13(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_6_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  let dim_out: vec2u = textureDimensions(conv2d_7_2_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  var result: vec4f = vec4f(0.0);

  // Output channels 0 to 3

  result += mat4x4<f32>(
    0.03135754, 0.00666441, -0.01550888, -0.04635836,
    0.15114802, 0.18128438, 0.07136080, 0.11379796,
    -0.27812710, -0.27239102, -0.26717287, -0.27918121,
    -0.16818643, -0.15038182, -0.11251074, -0.10473111
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.01643603, 0.00712273, 0.06715632, 0.04711488,
    -0.13877533, -0.10024065, -0.02497958, 0.01763454,
    0.30195057, 0.31012213, 0.30832919, 0.31949127,
    0.14302556, 0.11111507, 0.12620001, 0.08549227
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.36316743, 0.38054681, 0.28874752, 0.32137731,
    -0.10707925, -0.10023218, -0.14066811, -0.13204437,
    0.13772094, 0.11682395, 0.10157106, 0.10219666,
    -0.14782800, -0.18839507, -0.16382241, -0.20675609
  ) * go_1(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.28273737, -0.30806294, -0.31982905, -0.36968848,
    0.12626484, 0.09036208, 0.12453909, 0.09849034,
    -0.11443409, -0.10345145, -0.11026394, -0.10175797,
    0.13341570, 0.16036981, 0.15011129, 0.19966660
  ) * go_1(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.07498836, -0.03851352, -0.10081194, -0.05307696,
    0.18804075, 0.26196259, -0.00342017, 0.07699103,
    -0.01883388, -0.00646006, 0.06124192, 0.05405207,
    0.00214532, 0.00946200, 0.02392145, 0.02148741
  ) * go_2(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.01639135, 0.00558218, 0.10870643, 0.06703679,
    -0.19176093, -0.25032589, -0.00277806, -0.07622700,
    0.07074446, 0.05023439, 0.01163177, -0.01317115,
    -0.07623681, -0.11167581, 0.00748436, 0.02125982
  ) * go_2(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.02085689, 0.00824382, -0.00561319, 0.02805589,
    -0.00573414, -0.03824797, -0.05201056, -0.06901348,
    -0.00691605, 0.00945892, 0.03516248, 0.01506389,
    -0.06112175, -0.06070422, -0.04205900, -0.05825111
  ) * go_3(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05036394, 0.03631692, 0.00128428, 0.00166530,
    0.07165414, 0.00242045, 0.10274473, 0.04445338,
    0.01234874, 0.00610151, -0.03483300, -0.02600559,
    0.03368817, 0.07268820, 0.04264899, 0.07410817
  ) * go_3(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.03490187, -0.01181102, 0.01881397, 0.01642214,
    0.01171249, -0.02000915, 0.01384627, -0.05991408,
    0.03274469, 0.00604128, 0.03403140, -0.01462108,
    0.02246903, -0.01301265, 0.01731507, -0.00496062
  ) * go_4(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.06695674, -0.06689750, -0.04762276, 0.02580223,
    0.02469355, 0.01735744, 0.00256495, 0.01863655,
    -0.04424400, 0.02364744, -0.05665200, 0.01038512,
    0.01438954, -0.00101618, 0.01601650, -0.04189414
  ) * go_4(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.04057684, 0.06412672, -0.00286317, -0.05343793,
    -0.01797206, 0.04568533, 0.01813630, 0.02922378,
    -0.16514798, -0.04342489, 0.07430021, -0.02439653,
    0.00395894, -0.00945058, -0.03335239, 0.06665640
  ) * go_5(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.00034222, -0.05514566, -0.03830322, 0.03192531,
    0.03090179, -0.06183659, -0.02219495, -0.01263564,
    0.13680707, 0.10378850, -0.07544924, -0.00943832,
    0.21358170, 0.05825565, -0.21394759, -0.11751959
  ) * go_5(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.10625302, 0.00087535, -0.10638376, -0.09216858,
    -0.08101528, -0.03805573, 0.08669031, -0.04558620,
    -0.06043846, 0.12299537, 0.01846868, -0.05380801,
    0.18637539, -0.14527768, 0.02167644, -0.05844731
  ) * go_6(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.01174593, 0.06423277, 0.05124411, 0.00306384,
    0.01177674, 0.10949585, -0.16689298, 0.13624141,
    -0.01085870, -0.12538308, 0.01959404, 0.10381656,
    -0.10724543, 0.05388744, 0.05879023, -0.00143183
  ) * go_6(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.03135754, 0.00666441, -0.01550888, -0.04635836,
    0.15114802, 0.18128438, 0.07136080, 0.11379796,
    -0.27812710, -0.27239102, -0.26717287, -0.27918121,
    -0.16818643, -0.15038182, -0.11251074, -0.10473111
  ) * go_7(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.01643603, 0.00712273, 0.06715632, 0.04711488,
    -0.13877533, -0.10024065, -0.02497958, 0.01763454,
    0.30195057, 0.31012213, 0.30832919, 0.31949127,
    0.14302556, 0.11111507, 0.12620001, 0.08549227
  ) * go_7(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.36316743, 0.38054681, 0.28874752, 0.32137731,
    -0.10707925, -0.10023218, -0.14066811, -0.13204437,
    0.13772094, 0.11682395, 0.10157106, 0.10219666,
    -0.14782800, -0.18839507, -0.16382241, -0.20675609
  ) * go_8(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.28273737, -0.30806294, -0.31982905, -0.36968848,
    0.12626484, 0.09036208, 0.12453909, 0.09849034,
    -0.11443409, -0.10345145, -0.11026394, -0.10175797,
    0.13341570, 0.16036981, 0.15011129, 0.19966660
  ) * go_8(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.07498836, -0.03851352, -0.10081194, -0.05307696,
    0.18804075, 0.26196259, -0.00342017, 0.07699103,
    -0.01883388, -0.00646006, 0.06124192, 0.05405207,
    0.00214532, 0.00946200, 0.02392145, 0.02148741
  ) * go_9(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.01639135, 0.00558218, 0.10870643, 0.06703679,
    -0.19176093, -0.25032589, -0.00277806, -0.07622700,
    0.07074446, 0.05023439, 0.01163177, -0.01317115,
    -0.07623681, -0.11167581, 0.00748436, 0.02125982
  ) * go_9(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.02085689, 0.00824382, -0.00561319, 0.02805589,
    -0.00573414, -0.03824797, -0.05201056, -0.06901348,
    -0.00691605, 0.00945892, 0.03516248, 0.01506389,
    -0.06112175, -0.06070422, -0.04205900, -0.05825111
  ) * go_10(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05036394, 0.03631692, 0.00128428, 0.00166530,
    0.07165414, 0.00242045, 0.10274473, 0.04445338,
    0.01234874, 0.00610151, -0.03483300, -0.02600559,
    0.03368817, 0.07268820, 0.04264899, 0.07410817
  ) * go_10(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.03490187, -0.01181102, 0.01881397, 0.01642214,
    0.01171249, -0.02000915, 0.01384627, -0.05991408,
    0.03274469, 0.00604128, 0.03403140, -0.01462108,
    0.02246903, -0.01301265, 0.01731507, -0.00496062
  ) * go_11(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.06695674, -0.06689750, -0.04762276, 0.02580223,
    0.02469355, 0.01735744, 0.00256495, 0.01863655,
    -0.04424400, 0.02364744, -0.05665200, 0.01038512,
    0.01438954, -0.00101618, 0.01601650, -0.04189414
  ) * go_11(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.04057684, 0.06412672, -0.00286317, -0.05343793,
    -0.01797206, 0.04568533, 0.01813630, 0.02922378,
    -0.16514798, -0.04342489, 0.07430021, -0.02439653,
    0.00395894, -0.00945058, -0.03335239, 0.06665640
  ) * go_12(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.00034222, -0.05514566, -0.03830322, 0.03192531,
    0.03090179, -0.06183659, -0.02219495, -0.01263564,
    0.13680707, 0.10378850, -0.07544924, -0.00943832,
    0.21358170, 0.05825565, -0.21394759, -0.11751959
  ) * go_12(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.10625302, 0.00087535, -0.10638376, -0.09216858,
    -0.08101528, -0.03805573, 0.08669031, -0.04558620,
    -0.06043846, 0.12299537, 0.01846868, -0.05380801,
    0.18637539, -0.14527768, 0.02167644, -0.05844731
  ) * go_13(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.01174593, 0.06423277, 0.05124411, 0.00306384,
    0.01177674, 0.10949585, -0.16689298, 0.13624141,
    -0.01085870, -0.12538308, 0.01959404, 0.10381656,
    -0.10724543, 0.05388744, 0.05879023, -0.00143183
  ) * go_13(pixel.xy, 0, 0);

  result += vec4f(0.00144255, -0.03216175, -0.02633443, 0.00655074);
  textureStore(conv2d_7_2_tex, pixel.xy, result);
}
