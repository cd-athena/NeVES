
// Layer: conv2d_7_1 - Conv2D with multiple inputs
@group(0) @binding(0) var conv2d_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_6_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_7_1_tex: texture_storage_2d<rgba16float, write>;

fn max4(v: vec4f, val: f32) -> vec4f {
  return max(v, vec4f(val));
}

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_1(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_1_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_2(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_2_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_3(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_3_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_4(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_4_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_5(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_5_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_6(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_6_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_7(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_8(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_1_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_9(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_2_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_10(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_3_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_11(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_4_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_12(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_5_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_13(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_6_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  let dim_out: vec2u = textureDimensions(conv2d_7_1_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  var result: vec4f = vec4f(0.0);

  // Output channels 0 to 3

  result += mat4x4<f32>(
    0.02297278, 0.02273273, 0.03234579, 0.01380202,
    -0.02310564, -0.01342284, -0.01424778, -0.00854722,
    0.02707357, 0.03602614, 0.06136293, 0.05093011,
    0.03820753, 0.08773527, 0.00974058, 0.05527429
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.04183660, 0.02372301, -0.06116892, -0.01884094,
    0.02784206, -0.03591046, 0.07155976, 0.01830507,
    -0.06193652, -0.06314365, -0.06746254, -0.06859936,
    -0.04453097, -0.04473996, -0.02242479, -0.02388234
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.01588781, 0.00948063, -0.05409105, -0.05443292,
    0.02129296, -0.03722441, -0.00703352, -0.04097904,
    -0.10134230, -0.09678857, -0.09415080, -0.08888479,
    0.06433402, 0.13187557, -0.00428045, 0.06548861
  ) * go_1(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.12146986, 0.15054598, 0.03434114, 0.06485028,
    0.02872066, 0.03085585, -0.02521542, -0.02030634,
    0.11731836, 0.12897451, 0.08925864, 0.11473703,
    -0.02439610, -0.11584531, -0.01888968, -0.10411546
  ) * go_1(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.11897208, -0.01424939, -0.10785230, 0.01089125,
    0.03962420, 0.13099566, 0.08928096, 0.19201852,
    -0.03617529, -0.02043784, 0.06447467, 0.05094495,
    -0.13069320, -0.14080995, 0.00513606, -0.01066730
  ) * go_2(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.01049013, -0.03063845, 0.07924410, 0.02248758,
    0.01700383, -0.03055831, 0.05274463, -0.03561048,
    0.09257672, 0.04857620, 0.00186479, -0.03443547,
    0.06636938, 0.03223267, 0.02682067, 0.03692359
  ) * go_2(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.00407374, 0.01005699, -0.00048462, -0.01547564,
    0.05704554, 0.04273650, -0.04758724, -0.03404572,
    -0.01923419, 0.01063539, 0.08824719, 0.08628327,
    -0.13448837, -0.12224047, -0.11756773, -0.11475694
  ) * go_3(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05829424, 0.02749548, 0.01925763, 0.02870509,
    0.06774540, -0.07614490, 0.13823065, 0.00017520,
    0.03431176, -0.00149235, -0.04277222, -0.07506030,
    0.04813342, 0.08236197, 0.07383422, 0.08058006
  ) * go_3(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.04512948, -0.01083343, 0.04569879, 0.03761984,
    0.04769910, -0.02017500, 0.05434206, -0.06644242,
    0.05892456, 0.00883576, 0.01340744, -0.05426920,
    0.03716429, -0.04710763, 0.02142523, -0.04879672
  ) * go_4(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.09852796, -0.12640630, -0.10088354, -0.01130426,
    -0.00079133, 0.00613326, -0.03948935, -0.00116800,
    -0.10763507, -0.00119085, -0.08574342, 0.01712798,
    0.00454879, -0.00391051, -0.00085323, -0.06604730
  ) * go_4(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05783624, 0.10033491, 0.00101101, -0.06762055,
    -0.04418803, 0.05350204, 0.02409326, 0.03784285,
    -0.26918355, -0.09190554, 0.10445755, -0.06010608,
    -0.00268169, -0.00669420, -0.04243639, 0.11575154
  ) * go_5(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.02110648, -0.06248862, -0.04603552, 0.06200917,
    0.03612137, -0.08162624, -0.04034486, -0.00634848,
    0.19885084, 0.15876228, -0.12386928, 0.00154101,
    0.32345846, 0.09105035, -0.32796967, -0.18884653
  ) * go_5(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.14899601, -0.00570601, -0.15780601, -0.13822542,
    -0.12458538, -0.06283900, 0.13274966, -0.07646244,
    -0.08715476, 0.16940883, 0.01670162, -0.10827003,
    0.28804979, -0.20541844, 0.04271665, -0.07348764
  ) * go_6(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.00642630, 0.10080519, 0.08488785, 0.01266797,
    0.02886900, 0.17405711, -0.25867569, 0.20148981,
    -0.02441281, -0.18931890, 0.03381515, 0.16755962,
    -0.16226275, 0.06414960, 0.08747528, -0.02191825
  ) * go_6(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.02297278, 0.02273273, 0.03234579, 0.01380202,
    -0.02310564, -0.01342284, -0.01424778, -0.00854722,
    0.02707357, 0.03602614, 0.06136293, 0.05093011,
    0.03820753, 0.08773527, 0.00974058, 0.05527429
  ) * go_7(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.04183660, 0.02372301, -0.06116892, -0.01884094,
    0.02784206, -0.03591046, 0.07155976, 0.01830507,
    -0.06193652, -0.06314365, -0.06746254, -0.06859936,
    -0.04453097, -0.04473996, -0.02242479, -0.02388234
  ) * go_7(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.01588781, 0.00948063, -0.05409105, -0.05443292,
    0.02129296, -0.03722441, -0.00703352, -0.04097904,
    -0.10134230, -0.09678857, -0.09415080, -0.08888479,
    0.06433402, 0.13187557, -0.00428045, 0.06548861
  ) * go_8(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.12146986, 0.15054598, 0.03434114, 0.06485028,
    0.02872066, 0.03085585, -0.02521542, -0.02030634,
    0.11731836, 0.12897451, 0.08925864, 0.11473703,
    -0.02439610, -0.11584531, -0.01888968, -0.10411546
  ) * go_8(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.11897208, -0.01424939, -0.10785230, 0.01089125,
    0.03962420, 0.13099566, 0.08928096, 0.19201852,
    -0.03617529, -0.02043784, 0.06447467, 0.05094495,
    -0.13069320, -0.14080995, 0.00513606, -0.01066730
  ) * go_9(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.01049013, -0.03063845, 0.07924410, 0.02248758,
    0.01700383, -0.03055831, 0.05274463, -0.03561048,
    0.09257672, 0.04857620, 0.00186479, -0.03443547,
    0.06636938, 0.03223267, 0.02682067, 0.03692359
  ) * go_9(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.00407374, 0.01005699, -0.00048462, -0.01547564,
    0.05704554, 0.04273650, -0.04758724, -0.03404572,
    -0.01923419, 0.01063539, 0.08824719, 0.08628327,
    -0.13448837, -0.12224047, -0.11756773, -0.11475694
  ) * go_10(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05829424, 0.02749548, 0.01925763, 0.02870509,
    0.06774540, -0.07614490, 0.13823065, 0.00017520,
    0.03431176, -0.00149235, -0.04277222, -0.07506030,
    0.04813342, 0.08236197, 0.07383422, 0.08058006
  ) * go_10(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.04512948, -0.01083343, 0.04569879, 0.03761984,
    0.04769910, -0.02017500, 0.05434206, -0.06644242,
    0.05892456, 0.00883576, 0.01340744, -0.05426920,
    0.03716429, -0.04710763, 0.02142523, -0.04879672
  ) * go_11(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.09852796, -0.12640630, -0.10088354, -0.01130426,
    -0.00079133, 0.00613326, -0.03948935, -0.00116800,
    -0.10763507, -0.00119085, -0.08574342, 0.01712798,
    0.00454879, -0.00391051, -0.00085323, -0.06604730
  ) * go_11(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05783624, 0.10033491, 0.00101101, -0.06762055,
    -0.04418803, 0.05350204, 0.02409326, 0.03784285,
    -0.26918355, -0.09190554, 0.10445755, -0.06010608,
    -0.00268169, -0.00669420, -0.04243639, 0.11575154
  ) * go_12(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.02110648, -0.06248862, -0.04603552, 0.06200917,
    0.03612137, -0.08162624, -0.04034486, -0.00634848,
    0.19885084, 0.15876228, -0.12386928, 0.00154101,
    0.32345846, 0.09105035, -0.32796967, -0.18884653
  ) * go_12(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.14899601, -0.00570601, -0.15780601, -0.13822542,
    -0.12458538, -0.06283900, 0.13274966, -0.07646244,
    -0.08715476, 0.16940883, 0.01670162, -0.10827003,
    0.28804979, -0.20541844, 0.04271665, -0.07348764
  ) * go_13(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.00642630, 0.10080519, 0.08488785, 0.01266797,
    0.02886900, 0.17405711, -0.25867569, 0.20148981,
    -0.02441281, -0.18931890, 0.03381515, 0.16755962,
    -0.16226275, 0.06414960, 0.08747528, -0.02191825
  ) * go_13(pixel.xy, 0, 0);

  result += vec4f(0.04352144, -0.02750790, -0.00715349, 0.01676371);
  textureStore(conv2d_7_1_tex, pixel.xy, result);
}
