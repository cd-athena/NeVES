
// Layer: conv2d_7_0 - Conv2D with multiple inputs
@group(0) @binding(0) var conv2d_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_6_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_7_tex: texture_storage_2d<rgba16float, write>;

fn max4(v: vec4f, val: f32) -> vec4f {
  return max(v, vec4f(val));
}

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_1(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_1_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_2(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_2_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_3(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_3_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_4(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_4_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_5(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_5_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_6(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(conv2d_6_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_7(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_8(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_1_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_9(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_2_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_10(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_3_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_11(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_4_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_12(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_5_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
fn go_13(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(conv2d_6_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}
@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  let dim_out: vec2u = textureDimensions(conv2d_7_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  var result: vec4f = vec4f(0.0);

  // Output channels 0 to 3

  result += mat4x4<f32>(
    -0.15312955, -0.06510461, -0.04404985, -0.00467464,
    -0.02472575, -0.06778970, 0.03168510, -0.01385351,
    -0.05400792, -0.04498451, -0.03432644, -0.04641271,
    -0.11589276, -0.18471719, 0.04829363, -0.02945779
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.12031341, -0.03515983, 0.22818208, 0.07330666,
    -0.07047168, 0.08203482, -0.15295064, -0.01152607,
    0.03756319, 0.04725778, 0.04063702, 0.04964804,
    0.04537617, 0.06727496, 0.02375068, 0.02652703
  ) * go_0(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.19436359, 0.15419273, -0.00437949, -0.02034147,
    0.19322623, 0.12858476, 0.05945111, -0.00443471,
    0.15804116, 0.17488146, 0.15198612, 0.18403469,
    -0.11087565, -0.27639911, 0.06987444, -0.10699733
  ) * go_1(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.12406569, -0.06771474, -0.09737734, -0.02401237,
    -0.15666129, -0.13243249, -0.06326441, -0.02229023,
    -0.14739053, -0.27922770, -0.20727775, -0.35466486,
    0.02122561, 0.17752030, -0.23768172, 0.01951535
  ) * go_1(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05373843, 0.04575954, 0.06079854, 0.03596762,
    0.13895653, -0.05281572, -0.08642690, -0.27752340,
    -0.13881686, -0.07909138, -0.02676639, 0.00355876,
    0.05155088, -0.10965462, 0.10486842, -0.09816585
  ) * go_2(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.06969336, -0.01890618, 0.03941757, 0.04258272,
    -0.23709957, 0.01985852, -0.08199726, 0.22033596,
    0.11674082, 0.06577892, 0.03869869, -0.00157508,
    -0.09719048, 0.04643418, -0.03447703, 0.22078773
  ) * go_2(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.01388199, 0.05894597, -0.01637707, 0.03154230,
    0.04931139, 0.01269888, 0.00603553, -0.03333550,
    -0.05932323, -0.02128518, -0.00813388, 0.00516633,
    -0.00840753, -0.02012686, 0.06762681, 0.04224633
  ) * go_3(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.04019598, -0.01209773, 0.02468576, -0.01252571,
    0.02684670, -0.05629025, 0.03812805, -0.01030201,
    0.05805450, 0.03002540, -0.00957928, -0.02986595,
    -0.00788322, 0.03697678, -0.06233583, -0.03974951
  ) * go_3(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.03117891, -0.01414972, 0.02056917, 0.03064237,
    0.02308642, 0.00805764, 0.01356038, -0.04398629,
    0.00365015, 0.01114767, 0.03505361, 0.00969916,
    0.04830125, -0.00734711, 0.01695357, -0.02144117
  ) * go_4(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.02397057, -0.02832342, -0.01075827, 0.04593225,
    0.01175613, 0.00049214, 0.00219705, 0.01347086,
    -0.01601856, 0.03554259, -0.05049410, 0.01344140,
    -0.01774684, -0.00945613, 0.01570505, -0.03375484
  ) * go_4(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.02286225, 0.05587258, 0.00133267, -0.05259024,
    -0.02686592, 0.03111242, 0.02197368, 0.02199827,
    -0.15563367, -0.02545408, 0.08729178, -0.03690919,
    -0.00620987, -0.02392591, -0.04515802, 0.07284626
  ) * go_5(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.02566699, -0.04798458, -0.03564505, 0.04019235,
    0.02353669, -0.06259003, -0.03474296, -0.00241296,
    0.13311121, 0.08304884, -0.08738783, -0.01341638,
    0.26148090, 0.09501585, -0.23365740, -0.11547782
  ) * go_5(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.12920436, 0.03718713, -0.11723751, -0.07806945,
    -0.08207495, -0.03019676, 0.09884720, -0.05633909,
    -0.07036681, 0.13581982, 0.02168394, -0.07545245,
    0.21655351, -0.17454836, 0.03610871, -0.06208203
  ) * go_6(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.03486266, 0.04960933, 0.04674413, -0.01147676,
    -0.00847244, 0.10533118, -0.19668908, 0.15529910,
    -0.01157800, -0.14494735, 0.02746373, 0.13108890,
    -0.12755536, 0.06265275, 0.05381471, -0.01425089
  ) * go_6(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.15312955, -0.06510461, -0.04404985, -0.00467464,
    -0.02472575, -0.06778970, 0.03168510, -0.01385351,
    -0.05400792, -0.04498451, -0.03432644, -0.04641271,
    -0.11589276, -0.18471719, 0.04829363, -0.02945779
  ) * go_7(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.12031341, -0.03515983, 0.22818208, 0.07330666,
    -0.07047168, 0.08203482, -0.15295064, -0.01152607,
    0.03756319, 0.04725778, 0.04063702, 0.04964804,
    0.04537617, 0.06727496, 0.02375068, 0.02652703
  ) * go_7(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.19436359, 0.15419273, -0.00437949, -0.02034147,
    0.19322623, 0.12858476, 0.05945111, -0.00443471,
    0.15804116, 0.17488146, 0.15198612, 0.18403469,
    -0.11087565, -0.27639911, 0.06987444, -0.10699733
  ) * go_8(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.12406569, -0.06771474, -0.09737734, -0.02401237,
    -0.15666129, -0.13243249, -0.06326441, -0.02229023,
    -0.14739053, -0.27922770, -0.20727775, -0.35466486,
    0.02122561, 0.17752030, -0.23768172, 0.01951535
  ) * go_8(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.05373843, 0.04575954, 0.06079854, 0.03596762,
    0.13895653, -0.05281572, -0.08642690, -0.27752340,
    -0.13881686, -0.07909138, -0.02676639, 0.00355876,
    0.05155088, -0.10965462, 0.10486842, -0.09816585
  ) * go_9(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.06969336, -0.01890618, 0.03941757, 0.04258272,
    -0.23709957, 0.01985852, -0.08199726, 0.22033596,
    0.11674082, 0.06577892, 0.03869869, -0.00157508,
    -0.09719048, 0.04643418, -0.03447703, 0.22078773
  ) * go_9(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.01388199, 0.05894597, -0.01637707, 0.03154230,
    0.04931139, 0.01269888, 0.00603553, -0.03333550,
    -0.05932323, -0.02128518, -0.00813388, 0.00516633,
    -0.00840753, -0.02012686, 0.06762681, 0.04224633
  ) * go_10(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.04019598, -0.01209773, 0.02468576, -0.01252571,
    0.02684670, -0.05629025, 0.03812805, -0.01030201,
    0.05805450, 0.03002540, -0.00957928, -0.02986595,
    -0.00788322, 0.03697678, -0.06233583, -0.03974951
  ) * go_10(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.03117891, -0.01414972, 0.02056917, 0.03064237,
    0.02308642, 0.00805764, 0.01356038, -0.04398629,
    0.00365015, 0.01114767, 0.03505361, 0.00969916,
    0.04830125, -0.00734711, 0.01695357, -0.02144117
  ) * go_11(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.02397057, -0.02832342, -0.01075827, 0.04593225,
    0.01175613, 0.00049214, 0.00219705, 0.01347086,
    -0.01601856, 0.03554259, -0.05049410, 0.01344140,
    -0.01774684, -0.00945613, 0.01570505, -0.03375484
  ) * go_11(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.02286225, 0.05587258, 0.00133267, -0.05259024,
    -0.02686592, 0.03111242, 0.02197368, 0.02199827,
    -0.15563367, -0.02545408, 0.08729178, -0.03690919,
    -0.00620987, -0.02392591, -0.04515802, 0.07284626
  ) * go_12(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.02566699, -0.04798458, -0.03564505, 0.04019235,
    0.02353669, -0.06259003, -0.03474296, -0.00241296,
    0.13311121, 0.08304884, -0.08738783, -0.01341638,
    0.26148090, 0.09501585, -0.23365740, -0.11547782
  ) * go_12(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    0.12920436, 0.03718713, -0.11723751, -0.07806945,
    -0.08207495, -0.03019676, 0.09884720, -0.05633909,
    -0.07036681, 0.13581982, 0.02168394, -0.07545245,
    0.21655351, -0.17454836, 0.03610871, -0.06208203
  ) * go_13(pixel.xy, 0, 0);

  result += mat4x4<f32>(
    -0.03486266, 0.04960933, 0.04674413, -0.01147676,
    -0.00847244, 0.10533118, -0.19668908, 0.15529910,
    -0.01157800, -0.14494735, 0.02746373, 0.13108890,
    -0.12755536, 0.06265275, 0.05381471, -0.01425089
  ) * go_13(pixel.xy, 0, 0);

  result += vec4f(0.04225190, 0.05369408, -0.03999962, 0.05476733);
  textureStore(conv2d_7_tex, pixel.xy, result);
}
